@model IEnumerable<HoardSorter.Models.DeckCards>

@{
    ViewBag.Title = "DeckCardsIndex";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
</head>
<body>
    <p>
        <font size="13">@ViewBag.DeckName</font>
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CardQty)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CardDetails.CardName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CardDetails.ConvertedManaCost)
            </th>

            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.CardQty)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CardDetails.CardName)
                </td>


                @if (item.CardDetails.ConvertedManaCost > 1)
                {
                    <td>
                        @Html.DisplayFor(modelItem => item.CardDetails.ConvertedManaCost)
                    </td>
                }
                else
                {
                    <td>
                        -
                    </td>
                }





                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.DeckCardID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.DeckCardID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.DeckCardID })
                </td>
            </tr>
        }

    </table>
    @{int count = 0;}
    @{int zeroCost = 0;}
    @{int oneCost = 0;}
    @{int twoCost = 0;}
    @{int threeCost = 0;}
    @{int fourCost = 0;}
    @{int fiveCost = 0;}
    @{int sixCost = 0;}
    @{int sevenCost = 0;}
    @{int eightCost = 0;}
    @{int ninePlusCost = 0;}
    @foreach (var item in Model)
    {
        count = count + item.CardQty;
        if (item.CardDetails.ConvertedManaCost == null || item.CardDetails.ConvertedManaCost == 0)
        {
            zeroCost = zeroCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost == 1)
        {
            oneCost = oneCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost == 2)
        {
            twoCost = twoCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost == 3)
        {
            threeCost = threeCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost == 4)
        {
            fourCost = fourCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost == 5)
        {
            fiveCost = fiveCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost == 6)
        {
            sixCost = sixCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost == 7)
        {
            sevenCost = sevenCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost == 8)
        {
            eightCost = eightCost + item.CardQty;
        }
        if (item.CardDetails.ConvertedManaCost >= 9)
        {
            ninePlusCost = ninePlusCost + item.CardQty;
        }

    }
    @{double percentZero = (((double)zeroCost / (double)count) * 100);}
    @{double percentOne = (((double)oneCost / (double)count) * 100);}
    @{double percentTwo = (((double)twoCost / (double)count) * 100);}
    @{double percentThree = (((double)threeCost / (double)count) * 100);}
    @{double percentFour = (((double)fourCost / (double)count) * 100);}
    @{double percentFive = (((double)fiveCost / (double)count) * 100);}
    @{double percentSix = (((double)sixCost / (double)count) * 100);}
    @{double percentSeven = (((double)sevenCost / (double)count) * 100);}
    @{double percentEight = (((double)eightCost / (double)count) * 100);}
    @{double percentNine = (((double)ninePlusCost / (double)count) * 100);}
    @if (count >= 60)
    {
    <font size="13" ; color="#3ACE1C">Valid Deck (@count/60+)</font>
    }
    else
    {
        <font size="13"; color="#DF1D1D">Invalid Deck Add More Cards (@count/60+)</font>
    }
    <br />Mana Curve
    <table frame="box" ; rules="all" ; width="800">
        <thead>
            <tr>
                <th>       </th>
                <th> 0 Mana</th>
                <th> 1 Mana</th>
                <th> 2 Mana</th>
                <th> 3 Mana</th>
                <th> 4 Mana</th>
                <th> 5 Mana</th>
                <th> 6 Mana</th>
                <th> 7 Mana</th>
                <th> 8 Mana</th>
                <th> 9+ Mana</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <th> Quantity</th>
                <td> @zeroCost </td>
                <td> @oneCost </td>
                <td> @twoCost </td>
                <td> @threeCost </td>
                <td> @fourCost </td>
                <td> @fiveCost </td>
                <td> @sixCost </td>
                <td> @sevenCost </td>
                <td> @eightCost </td>
                <td> @ninePlusCost </td>
            </tr>
        </tbody>
        <tfoot>
            <tr>
                <th> Percent</th>
                <td> @percentZero.ToString("0.00")%  </td>
                <td> @percentOne.ToString("0.00")%  </td>
                <td> @percentTwo.ToString("0.00")%  </td>
                <td> @percentThree.ToString("0.00")%  </td>
                <td> @percentFour.ToString("0.00")%  </td>
                <td> @percentFive.ToString("0.00")%  </td>
                <td> @percentSix.ToString("0.00")%  </td>
                <td> @percentSeven.ToString("0.00")%  </td>
                <td> @percentEight.ToString("0.00")%  </td>
                <td> @ninePlusCost.ToString("0.00")%  </td>
            </tr>
        </tfoot>
    </table>
</body>
</html>
